@startuml

package "BusinessLogic.Entities.Usuario" {
    class Usuario {
        - Integer id
        - String nombre
        - String apellido
        - String telefono
        - String email
        - String contrasena
        + {get; set;}
    }

    class Medico extends Usuario {
        - Integer idMedicoEspecialidad
        - Integer idMedicoRol
        + Medico(Integer id, String nombre, String apellido, String telefono, Integer idMedicoEspecialidad, Integer idMedicoRol)
        + recetar(Paciente paciente, Turno turno, String indicaciones, Medicamento medicamento)
        + generarHistoriaClinica(Paciente paciente, Turno turno, String diagnostico, String tratamiento)
        + {get; set;}
    }

    class Paciente extends Usuario {
        - String codigoUnico
        - String direccion
        - String fechaNacimiento
        - Float costo
        - ArrayList<HistoriaClinica> historiasClinica
        + Paciente(Integer id, String nombre, String apellido, String telefono, String codigoUnico, String direccion, String fechaNacimiento, String email)
        + registrarTurno(Medico medico, String fecha, Integer sala)
        + addHistoriaClinica(HistoriaClinica historiaClinica)
        + pagarTurno(Turno turno, Integer idPagoMetodo)
        + {get; set;}
    }
}

package "BusinessLogic.Entities.Turno" {
    class Turno {
        - Integer id
        - Paciente paciente
        - Medico medico
        - Integer idSala
        - String fecha
        - Integer idTurnoEstado
        + Turno(Integer id, Paciente paciente, Medico medico, Integer idSala, String fecha, Integer idTurnoEstado)
        + generarFactura() : Float
        + pagar(Integer idPagoMetodo)
        + {get; set;}
    }

    class HistoriaClinica {
        - String diagnostico
        - String tratamiento
        - Medico medico
        + HistoriaClinica(String diagnostico, String tratamiento, Medico medico)
    }
}

package "BusinessLogic.Entities.RecetaMedica" {
    class Medicamento {
        - Integer id
        - String nombreComercial
        - String nombreQuimico
        - Float concentracion
        + Medicamento(Integer id, String nombreComercial, String nombreQuimico, Float concentracion)
        + {get; set;}
    }
}

package "BusinessLogic.Entities.Autenticacion" {
    class Autenticacion {
        + static Paciente registrarPaciente(String nombre, String apellido, String codigoUnico, String telefono, String fechaNacimiento, String direccion, String email, String contraseña)
        + static Usuario registrarUsuario(String nombre, String apellido, String telefono, Integer idMedicoEspecialidad, Integer idMedicoRol, String email, String contraseña)
    }

    class AutenticacionCredenciales extends Autenticacion {
        + static Usuario autenticar(String email, String contrasena)
    }

    class AutenticacionFacial extends Autenticacion {
        + static Usuario autenticar()
    }

    class AutenticacionOTP extends Autenticacion {
        + static Boolean autenticar(String email)
        + static Boolean validarOTP(String otp)
        + static Usuario obtenerUsuario()
    }
}

package "BusinessLogic.Entities.Utils" {
    class AutenticacionFacialUtils {
        + static void captureAndSavePhoto() throws IOException
        + static Integer autenticarFacialmente() throws IOException
        + static Boolean registrarFacialmente(Integer idUsuario) throws IOException
    }
     class AutenticacionOTPUtils {
        +static String generarOTP()
    }

    class EmailUtils {
        +static void enviarEmail(String to, String subject, String body)
    }
}




package "BusinessLogic" {
    class BLFactory<T> {
        + BLFactory(Supplier<T> supplier)
        + add(T entity)
        + getAll()
        + getBy(Integer id)
    }
}

package "Framework" {
    class PoliSaludException {
        + PoliSaludException(String message, String className, String methodName)
    }
}



Usuario <|-- Medico
Usuario <|-- Paciente
Turno --> Paciente
Turno --> Medico
Turno --> HistoriaClinica
HistoriaClinica --> Medico
Paciente --> HistoriaClinica
Medico --> Medicamento
Medico --> RecetaMedica
Medico --> Turno
Paciente --> Turno


@enduml